/*
Given an integer n, return true if n has exactly three positive divisors. Otherwise, return false.

An integer m is a divisor of n if there exists an integer k such that n = k * m.

Example 1:

Input: n = 2 
Output: false
Explanation:  2 has only two divisors: 1 and 2.
Example 2:

Input: n = 4 
Output: true
Explanation: 4 has three divisors: 1, 2, and 4.
Example 3:

Input: n = 4 
Output: true
Explanation: 4 has three divisors: 1, 2, and 4.
Constraints:

1 <= n <= 
1
0
4
10 
4
*/

//code:

class Solution {
public:
	bool isThree(int n) {
		/*
        int count = 0;
        for(int i = 1; i <= n; i++) {
            if(n % i == 0) {
                count++;
            }
        }
        if(count == 3) 
        return true;
        else return false;
        //TC = O(N)
        //SC = O(N)
        */

        //Optimized Solution Using Line of Symmenty

        int count = 0;
        for(int i =1; i * i <= n; i++) {
            if(n % i == 0) {
                count+=2;
            }
            //because it is a perfect square
            if(i * i == n) { 
                count--;
            }
        }
        if(count == 3) return true;
        else return false;
        //TC = O(logn)
        //SC = O(N)
	}
};
