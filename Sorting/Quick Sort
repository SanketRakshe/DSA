Before Sorting: 
4 6 2 5 7 9 1 3
After Sorting:
1 2 3 4 5 6 7 9

Code:

#include<bits/stdc++.h>
using namespace std;
int partition(vector<int>& arr, int low , int high) {
    int pivot = arr[low];
    int i = low;
    int j = high;

    while(i < j) {
        while(arr[i] <= pivot && i <= high-1) {
            i++;
        }
        while(arr[j] > pivot && j >= low+1) {
            j--;
        }
        if(i < j) {
            swap(arr[i], arr[j]);
        }
    }
    swap(arr[low], arr[j]);
    return j;
}

void QS(vector<int>& arr, int low, int high) {
    //base case
    if(low < high) {
        int pIndex = partition(arr, low, high); 
        QS(arr, low, pIndex-1);
        QS(arr, pIndex+1, high);
    } 
}

vector<int> QuickSort(vector<int> arr) {
    QS(arr, 0, arr.size() - 1);
    return arr;
}

int main() {
    vector<int> arr = {4, 6, 2, 5, 7, 9, 1, 3};
    int n = arr.size();

    cout<<"Before Sorting: "<<endl;
    for(int i=0; i<n; i++) {
        cout<<arr[i]<<" ";
    }
    cout<<endl;

    arr = QuickSort(arr);

    cout<<"After Sorting: "<<endl;
    for(int i=0; i<n; i++) {
        cout<<arr[i]<<" ";
    }
    cout<<endl;

    return 0;
}

TC = O(Nlog2N)
SC = O(1)
